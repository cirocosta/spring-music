apiVersion: experimental.kontinue.io/v1
kind: Workflow
metadata:
  name: spring-music
spec:
  steps:
    - name: build
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
        - name: builder
          sourceRefs:
          - name: builder
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      outputs:
        latestImage:
          from: "{.status.latestImage}"
      template: |-
        kind: Build
        apiVersion: build.pivotal.io/v1alpha1
        metadata:
          generateName: build-spring-music-
        spec:
          tags: [ 'kontinue/spring-music' ]
          serviceAccount: service-account
          builder:
            image: '{{ .Vars.builder.url }}@{{ .Vars.builder.revision }}'
          source:
            git:
              url: 'https://github.com/{{ .Vars.repo.url }}'
              revision: '{{ .Vars.repo.revision }}'
    - name: create-deployment
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
      inputs:
        latestImage: 
          step: build
          from: latestImage
          matches: [repo]
      template: |-
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: {{ .RunId }}
          name: spring-music-{{ .RunId }}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: {{ .RunId }}
          template:
            metadata:
              labels:
                app.kubernetes.io/name: {{ .RunId }}
            spec:
              containers:
                - image: '{{ index .Inputs.latestImage 0 }}'
                  name: spring-music
                  imagePullPolicy: Always
                  env:
                    - name: JBP_CONFIG_SPRING_AUTO_RECONFIGURATION
                      value: '{enabled: false}'
                  ports:
                    - containerPort: 8080
    - name: create-service
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
      template: |-
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: {{ .RunId }}
          name: spring-music-{{ .RunId }}
        spec:
          ports:
            - port: 8080
              protocol: TCP
              targetPort: 8080
          selector:
            app.kubernetes.io/name: {{ .RunId }}
          type: ClusterIP
    - name: run-test
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
      template: |-
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          name: spring-music-{{ .RunId }}
        spec:
          taskSpec:
            steps:
            - name: run
              image: busybox
              script: |
                set -o xtrace
                set -o errexit

                wget -O- http://spring-music-{{ .RunId }}:8080

---

apiVersion: experimental.kontinue.io/v1
kind: GitSource
metadata:
  name: spring-music
spec:
  repository: cirocosta/spring-music
  branchFilter: kontinue

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spring-music-cr
rules:
- apiGroups:
  - "*"
  resources:
  - '*'
  verbs:
  - create
  - update
  - get
  - list

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spring-music-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spring-music-cr
subjects:
- kind: ServiceAccount
  name: default
  namespace: crds-system


---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-music-deployer

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spring-music-deployer-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: spring-music-deployer
  namespace: default

---

apiVersion: experimental.kontinue.io/v1
kind: CompletionRule
metadata:
  name: deployment
spec:
  resource:
    kind: Deployment
    apiVersion: apps/v1
  timeout: 3m
  succeeded:
    - condition: 
        type: "Available"
        status: "True"

