apiVersion: experimental.kontinue.io/v1
kind: Workflow
metadata:
  name: spring-music
spec:
  steps:
    - name: build
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
        - name: builder
          sourceRefs:
          - name: builder
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      outputs:
        latestImage:
          from: "{.status.latestImage}"
      template: |-
        kind: Build
        apiVersion: build.pivotal.io/v1alpha1
        metadata:
          generateName: build-spring-music-
        spec:
          tags: [ 'kontinue/spring-music' ]
          serviceAccount: service-account
          builder:
            image: '{{ .Vars.builder.url }}@{{ .Vars.builder.revision }}'
          source:
            git:
              url: 'https://github.com/{{ .Vars.repo.url }}'
              revision: '{{ .Vars.repo.revision }}'
    - name: deploy
      vars:
        - name: repo
          sourceRefs:
          - name: spring-music
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
      inputs:
        latestImage: 
          step: build
          from: latestImage
          matches: [repo]
      template: |-
        apiVersion: kappctrl.k14s.io/v1alpha1
        kind: App
        metadata:
          name: spring-music
        spec:
          serviceAccountName: spring-music-deployer
          fetch:
          - git:
              url: 'https://github.com/{{ .Vars.repo.url }}'
              ref: '{{ .Vars.repo.revision }}'
              subPath: k8s
          template: 
          - ytt: 
              ignoreUnknownComments: true
              inline:
                paths:
                  patch-image.yml: |
                    #@ load("@ytt:overlay", "overlay")
                    #@overlay/match by=overlay.subset({"kind":"Deployment","metadata":{"name":"spring-music"}})
                    ---
                    spec:
                      template:
                        spec: 
                          containers:
                            #@overlay/match by=overlay.subset({"name":"spring-music"})
                            - name: spring-music
                              image: '{{ index .Inputs.latestImage 0 }}'
          deploy:
          - kapp: {}

---

apiVersion: experimental.kontinue.io/v1
kind: GitSource
metadata:
  name: spring-music
spec:
  repository: cirocosta/spring-music
  branchFilter: kontinue

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spring-music-cr
rules:
- apiGroups:
  - build.pivotal.io
  - kappctrl.k14s.io
  resources:
  - '*'
  verbs:
  - create
  - update
  - get
  - list

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spring-music-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spring-music-cr
subjects:
- kind: ServiceAccount
  name: default
  namespace: crds-system


---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-music-deployer

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spring-music-deployer-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: spring-music-deployer
  namespace: default
